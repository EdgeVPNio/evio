declare_args() {
  disable_precompiled_headers = false
}

# Define a config setting up a precompiled header.
#
# Precompiled headers are done on a per-target basis. If you have just a couple
# of files, the time it takes to precompile (~2 seconds) can actually be longer
# than the time saved. On a Z620, a 100 file target compiles about 2 seconds
# faster with precompiled headers, with greater savings for larger targets.
#
# Recommend precompiled headers for targets with more than 50 .cc files.
#
# precompiled_header (required)
#     A string referring to the header file.
#
# precompiled_source (required)
#     GN path of a source file which will be compiled to a PCH.
template("precompiled_header") {
  assert(defined(invoker.precompiled_header),
         "Need precompiled_header in $target_name.")
  assert(defined(invoker.precompiled_source),
         "Need precompiled_header in $target_name.")

  config(target_name) {
    if (!disable_precompiled_headers) {
      # This is a string rather than a file GN knows about. It has to match
      # exactly what's in the /FI flag below, and what might appear in the source
      # code in quotes for an #include directive.
      precompiled_header = invoker.precompiled_header

      # This is a file that GN will compile with the above header. It will be
      # implicitly added to the sources (potentially multiple times, with one
      # variant for each language used in the target).

      if (is_win) {
        precompiled_source = invoker.precompiled_source

        # Force include the header.
        cflags = [ "/FI$precompiled_header" ]

        # Disable warning for "this file was empty after preprocessing". This
        # error is generated only in C mode for ANSI compatibility. It conflicts
        # with precompiled headers since the source file that's "compiled" for
        # making the precompiled header is empty.
        #
        # This error doesn't happen every time. In VS2013, it seems if the .pch
        # file doesn't exist, no error will be generated (probably MS tested this
        # case but forgot the other one?). To reproduce this error, do a build,
        # then delete the precompile.c.obj file, then build again.
        cflags_c = [ "/wd4206" ]
      } else {
        # TODO(tim): Dirty hack to mark the variable as used.
        precompiled_source = invoker.precompiled_source

        precompiled_source = invoker.precompiled_header
      }
    }
  }
}

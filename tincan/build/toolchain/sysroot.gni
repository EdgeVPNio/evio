# Copyright (c) 2013 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This header file defines the "sysroot" variable which is the absolute path
# of the sysroot. If no sysroot applies, the variable will be an empty string.

declare_args() {
  # The absolute path of the sysroot that is applied when compiling using
  # the target toolchain.
  target_sysroot = ""
  target_sysroot_dir = ""

  use_sysroot = current_cpu == "x64"
}

if (use_sysroot && target_sysroot != "") {
  sysroot = target_sysroot
} else if (is_linux && use_sysroot) {
    # By default build against a sysroot image downloaded from Cloud Storage
    # during gclient runhooks.
    if (current_cpu == "x64") {
      sysroot = "$target_sysroot_dir/debian_sid_amd64-sysroot"
      libs = ["c++", "c++abi"]
    } else if (current_cpu == "x86") {
      sysroot = "$target_sysroot_dir/debian_sid_i386-sysroot"
    } else if (current_cpu == "mipsel") {
      sysroot = "$target_sysroot_dir/debian_sid_mips-sysroot"
    } else if (current_cpu == "mips64el") {
      sysroot = "$target_sysroot_dir/debian_sid_mips64el-sysroot"
    } else if (current_cpu == "arm") {
      sysroot = "$target_sysroot_dir/debian_sid_arm-sysroot"
    } else if (current_cpu == "arm64") {
      sysroot = "$target_sysroot_dir/debian_sid_arm64-sysroot"
    } else {
      assert(false, "No linux sysroot for cpu: $target_cpu")
    }

} else if (is_mac) {
  import("//build/toolchain/mac/mac_sdk.gni")
  sysroot = mac_sdk_path
} else if (is_ios) {
  import("//build/toolchain/mac/ios_sdk.gni")
  sysroot = ios_sdk_path
} else {
  sysroot = ""
}
